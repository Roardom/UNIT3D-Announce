# Database URL for UNIT3D's mysql database.
DATABASE_URL=mysql://db_username:db_password@127.0.0.1:3306/db_name
# OR for connecting via unix sockets:
# DATABASE_URL=mysql://db_username:db_password@127.0.0.1:3306/db_name?socket=/var/run/mysqld/mysqld.sock

# Log level for information generated by the tracker. Comma-separated value
# of crate=level pairs, where crate is the library that the level is enabled
# for. To log route rejections, set `axum::rejection=trace`.
#
# Default: "unit3d_announce=info,axum::rejection=off"
RUST_LOG="unit3d_announce=info,axum::rejection=off"

# The interval (in milliseconds) between when history, peers, torrents and
# users are flushed to the main mysql database.
#
# Default: 3000
FLUSH_INTERVAL_MILLISECONDS=3000

# Amount of concurrent SQL queries per table flush. Use 1 and decrease
# the flush interval as necessary unless handling more than 10 000
# announces per second.
#
# Default: 1
MAX_BATCHES_PER_FLUSH=1

# If specified, limits the amount of records upserted in each SQL query.
# Can be used to distribute increased load across multiple SQL queries.
# If unspecified, uses the max bindings allowed per SQL query.
#
# Default: <commented out>
# Example: 1000
# MAX_RECORDS_PER_BATCH=1000

# The amount of peers that should be sent back if the peer does not
# include a numwant.
#
# Default: 15
NUMWANT_DEFAULT=15

# The max amount of peers that should be sent back if the peer's numwant
# is too high.
#
# Default: 15
NUMWANT_MAX=15

# A random amount of seconds between announce_min and announce_max will
# be returned to the peer for the next time they should announce.
#
# Default: 1800
ANNOUNCE_MIN=1800

# If a user announces before this many seconds after their previous
# announce, then they will receive a rate limit error.
#
# Default: 1740
ANNOUNCE_MIN_ENFORCED=1740

# A random amount of seconds between announce_min and announce_max will
# be returned to the peer for the next time they should announce.
#
# Default: 3600
ANNOUNCE_MAX=3600

# The upload_factor is multiplied by 0.01 before being multiplied with
# the announced uploaded parameter and saved in the "credited" upload
# column. An upload_factor of 200 means global double upload.
#
# Default: 100
UPLOAD_FACTOR=100

# The download factor is multiplied by 0.01 before being multiplied
# with the announced downloaded parameter and saved in the "credited"
# download column. A download_factor of 0 means global freeleech.
#
# Default: 100
DOWNLOAD_FACTOR=100

# Amount of seconds between scheduled batches where peers are marked as
# inactive or erased from memory.
#
# Default: 1800
PEER_EXPIRY_INTERVAL=1800

# Amount of seconds since the last announce before a peer is considered
# inactive.
#
# Default: 7200
ACTIVE_PEER_TTL=7200

# Amount of seconds since the last announce before a peer is erased from
# memory. This value should be long enough that users can suffer
# multi-day network outages without announcing, otherwise if their setup
# comes back online and the peer has been erased, then their new stats
# will be recorded incorrectly.
#
# Default: 1814400
INACTIVE_PEER_TTL=1814400

# Max amount of active peers a user is allowed to have on a torrent.
# Prevents abuse from malicious users causing the server to run out of ram,
# as well as keeps the peer lists from being filled with too many clients
# of a single user.
#
# Default: 3
MAX_PEERS_PER_TORRENT_PER_USER=3

# Site password used by UNIT3D to send api requests to the tracker.
# Must be at least 32 characters long and should be properly randomized.
APIKEY=CHANGE_ME

# IP address for the tracker to listen from to receive announces.
#
# Default: "127.0.0.1"
LISTENING_IP_ADDRESS="127.0.0.1"

# Port for the tracker to listen from to receive announces.
#
# Default: 6969
LISTENING_PORT=6969

# Path to unix domain socket to listen from to receive announces from
# reverse proxy.
#
# Default: <commented out>
# Example: "/run/unit3d-announce.sock"
# LISTENING_UNIX_SOCKET="/run/unit3d-announce.sock"

# Open a connection to the incoming peer announcing and record if their socket
# accepts the connection.
#
# **Warning:** Enabling this option will leak the server IP.
#
# Default: false
IS_CONNECTIVITY_CHECK_ENABLED=false

# The minimum number of seconds a socket's connectivity status is cached for
# before rechecking the peer's connectivity. Use `-1` for no caching.
#
# Default: 1800
CONNECTIVITY_CHECK_INTERVAL=1800

# When enabled, restrict peers to those with open ports. Peers with closed
# ports will receive empty peer lists and are not included in other returned
# peer lists. Requires `IS_CONNECTIVITY_CHECK_ENABLED` to be `true`.
#
# Default: false
REQUIRE_PEER_CONNECTIVITY=false

# Enable logging of all successful announces to the `announces` table for
# debugging. This will generate significant amounts of data. Do not
# enable if you do not know what you are doing.
#
# Default: false
IS_ANNOUNCE_LOGGING_ENABLED=false

# The header provided by the reverse proxy that includes the bittorrent
# client's original ip address. The last address in the comma separated
# list will be selected. Leave empty to select the connecting ip address
# if not using a reverse proxy. A reverse proxy is required if listening
# on unix sockets.
#
# Default: <commented out>
# Example: "X-Real-IP"
# REVERSE_PROXY_CLIENT_IP_HEADER_NAME="X-Real-IP"

# The max amount of peer lists containing seeds a user is allowed to
# receive per time window (in seconds). The rate is calculated using an
# exponential decay model. If a user requests peer lists faster than
# this, then their peer lists will be empty. Mitigates peer scraping
# attacks.
#
# Format: "window1=max_amount1;window2=max_amount2"
# Default: "60=10;900=25;7200=125;86400=500;604800=2500"
USER_RECEIVE_SEED_LIST_RATE_LIMITS = "60=10;900=25;7200=125;86400=500;604800=2500"

# The max amount of peer lists containing leeches a user is allowed to
# receive per time window (in seconds). The rate is calculated using an
# exponential decay model. If a user requests peer lists faster than
# this, then their peer lists will be empty. Mitigates peer scraping
# attacks.
#
# Format: "window1=max_amount1;window2=max_amount2"
# Default: "60=20;900=50;7200=250;86400=1000;604800=5000"
USER_RECEIVE_LEECH_LIST_RATE_LIMITS = "60=20;900=50;7200=250;86400=1000;604800=5000"

# If specified, this will override the immune status on the user's group
# to the specified value.
#
# Default: <commented out>
# Example: true
# DONOR_IMMUNITY_OVERRIDE=true

# If specified, this will override the upload factor of the user's group.
# The factor is stored as a percentage.
#
# Default: <commented out>
# Example: 100
# DONOR_UPLOAD_FACTOR_OVERRIDE=100

# If specified, this will override the download factor of the user's
# group. The factor is stored as a percentage.
#
# Default: <commented out>
# Example: 100
# DONOR_DOWNLOAD_FACTOR_OVERRIDE=100

# If specified, this will override the immune status on the user's group
# to the specified value.
#
# Default: <commented out>
# Example: true
# LIFETIME_DONOR_IMMUNITY_OVERRIDE=true

# If specified, this will override the upload factor of the user's group.
# The factor is stored as a percentage.
#
# Default: <commented out>
# Example: 100
# LIFETIME_DONOR_UPLOAD_FACTOR_OVERRIDE=100

# If specified, this will override the download factor of the user's
# group. The factor is stored as a percentage.
#
# Default: <commented out>
# Example: 100
# LIFETIME_DONOR_DOWNLOAD_FACTOR_OVERRIDE=100
